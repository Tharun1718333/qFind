const office = [
  [
    1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 0, 0,
    1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1,
  ],
  [
    1, 1, 1, 4, 2, 1, 4, 2, 4, 1, 0, 0, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 0, 0,
    1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1,
    1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1,
  ],
  [
    1, 1, 1, 1, 2, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1,
    1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 4, 1, 1, 1, 4,
    1, 1, 1, 1, 4,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1,
    1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2,
  ],
  [
    1, 1, 1, 4, 2, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1,
    1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1,
    1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2,
  ],
  [
    1, 1, 1, 1, 2, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1,
    1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1,
    1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 1, 1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1,
    1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
    1, 2, 2, 4, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 1, 1, 4, 2, 1, 4, 1, 4, 4, 1, 0, 0, 4, 1, 2, 2, 4, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1,
    1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1,
    1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1,
    1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1,
    1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 4, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1,
    1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 4, 4, 1, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1,
    1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1,
    1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    0, 0, 4, 1, 2, 1, 4, 1, 4, 4, 1, 0, 0, 4, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1,
    1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 4, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1,
    4, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 1, 1,
    1, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 4, 4, 1, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 1, 1,
    1, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 1, 1,
    4, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    1, 4, 4, 1, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 4, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0,
    0, 2, 2, 4, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0,
    0, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0,
    0, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 4, 4, 1, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 4, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0,
    0, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0,
    0, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    1, 4, 4, 1, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0,
    0, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0,
    0, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0,
    0, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    0, 0, 4, 1, 2, 1, 4, 1, 4, 4, 1, 0, 0, 4, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
    0, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 1, 4, 1,
    4, 1, 1, 0, 0,
  ],
  [
    1, 4, 4, 1, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 4, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 2, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
    2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 4, 4, 1, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 4, 4, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 4,
    2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    1, 4, 4, 1, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 4, 4, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 4, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 4,
    2, 2, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 2, 1, 1, 2, 1, 1, 1, 1, 2, 0, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0, 4,
    1, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 4, 4, 1, 1, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    0, 0, 2, 1, 4, 2, 4, 1, 1, 4, 2, 0, 0, 1, 2, 2, 2, 1, 4, 1, 4, 1, 1, 4, 1,
    1, 4, 1, 1, 4, 1, 1, 4, 1, 1, 4, 1, 1, 4, 1, 1, 4, 1, 1, 1, 2, 2, 0, 0, 1,
    1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 4, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 4, 4, 1, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 1, 2, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1,
    1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 2, 1, 1, 1, 4,
    2, 2, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 1, 2, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 2, 2, 2, 1, 4, 2, 1, 4, 2, 4, 1,
    1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 2, 2, 2, 2, 2, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    1, 1, 2, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 2, 2, 2, 1, 4, 2, 1, 4, 2, 4, 1,
    1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1,
    1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 4,
    2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1,
    1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    1, 1, 2, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 2, 2, 2, 1, 4, 2, 1, 4, 2, 4, 1,
    1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    1, 4, 2, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 2, 2, 2, 1, 4, 2, 1, 4, 2, 4, 1,
    1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 4,
    2, 2, 2, 2, 2, 2, 2, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1,
    1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2,
    2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 2, 1, 4, 2, 4, 1, 1, 4, 2, 0, 0, 1, 2, 2, 2, 1, 4, 2, 1, 4, 2, 0, 0,
    1, 4, 2, 4, 1, 1, 4, 2, 4, 1, 0, 0, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 0, 2, 2,
    2, 1, 4, 4, 1, 2, 2, 1, 4, 0, 0, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 2, 1, 1, 2, 1, 1, 1, 1, 2, 0, 0, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 0, 0,
    1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 0, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 0, 0, 1, 4, 4, 1, 1, 4, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 4,
    2, 2, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 4, 2, 2, 1, 1, 1, 1,
    2, 2, 2, 2, 2, 2, 2, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 4,
    2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 4,
    2, 2, 1, 4, 4, 1, 2, 2, 4, 1, 1, 4, 2, 2, 4, 1, 1, 4, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 4, 1, 1, 4, 2, 2, 4, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 2, 1, 1, 1, 1,
    2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 4,
    2, 2, 1, 4, 4, 1, 2, 2, 0, 0, 1, 1, 2, 2, 1, 1, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 4, 0, 0, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 4, 2, 2, 4, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2,
    2, 2, 1, 4, 4, 1, 2, 2, 4, 1, 1, 4, 2, 2, 4, 1, 1, 4, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2,
    2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1,
    1, 1, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 1, 4, 4,
    1, 4, 1, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 4, 0, 0, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 4, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 4, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 1, 4, 4, 1, 1, 4, 1, 4, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
    1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4,
    1, 1, 4, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 4, 1, 1, 4, 2, 4, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
  [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,
    2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0,
  ],
];

document.addEventListener("DOMContentLoaded", () => {
  populateDropdown();

  // Initialize SlimSelect
  new SlimSelect({ select: "#startPoint" });
  new SlimSelect({ select: "#endPoint" });
});
const canvas = document.getElementById("PlayGround");
const original_scale = 1;
const original_width = 3360;
const original_height = 3360;
var multiplier = 1;
const ctx = canvas.getContext("2d");
canvas.width = original_width;
canvas.height = original_height;
const rows = 105;
const cols = 105;
const blockSize = 32;
class Printable {
  constructor(name, textOrientation) {
    this.name = name;
    this.textOrientation = textOrientation;
  }
}

var printableMap = new Map();
printableMap.set(108, new Printable("1500D", "TR"));
printableMap.set(111, new Printable("1500A5", "TR"));
printableMap.set(113, new Printable("1500A6", "TL"));
printableMap.set(118, new Printable("1500A16", "TL"));
printableMap.set(121, new Printable("1500B5", "TR"));
printableMap.set(123, new Printable("1500B6", "TL"));
printableMap.set(126, new Printable("1500B15", "TR"));
printableMap.set(131, new Printable("1500C5", "TR"));
printableMap.set(133, new Printable("1500C6", "TL"));
printableMap.set(136, new Printable("1500C15", "TR"));
printableMap.set(138, new Printable("1500C16", "TL"));
printableMap.set(321, new Printable("1500A4", "TR"));
printableMap.set(323, new Printable("1500A7", "TL"));
printableMap.set(326, new Printable("1500A14", "TR"));
printableMap.set(328, new Printable("1500A17", "TL"));
printableMap.set(331, new Printable("1500B4", "TR"));
printableMap.set(333, new Printable("1500B7", "TL"));
printableMap.set(336, new Printable("1500B14", "TR"));
printableMap.set(338, new Printable("1500B17", "TL"));
printableMap.set(341, new Printable("1500C4", "TR"));
printableMap.set(343, new Printable("1500C7", "TL"));
printableMap.set(346, new Printable("1500C14", "TR"));
printableMap.set(348, new Printable("1500C17", "TL"));
printableMap.set(410, new Printable("1560A", "BR"));
printableMap.set(414, new Printable("1560B", "BR"));
printableMap.set(419, new Printable("1560C", "BR"));
printableMap.set(528, new Printable("1500C", "TR"));
printableMap.set(531, new Printable("1500A3", "TR"));
printableMap.set(533, new Printable("1500A8", "TL"));
printableMap.set(536, new Printable("1500A13", "TR"));
printableMap.set(538, new Printable("1500A18", "TL"));
printableMap.set(541, new Printable("1500B3", "TR"));
printableMap.set(543, new Printable("1500B8", "TL"));
printableMap.set(546, new Printable("1500B13", "TR"));
printableMap.set(548, new Printable("1500B18", "TL"));
printableMap.set(551, new Printable("1500C3", "TR"));
printableMap.set(553, new Printable("1500C8", "TL"));
printableMap.set(556, new Printable("1500C13", "TR"));
printableMap.set(558, new Printable("1500C18", "TL"));
printableMap.set(741, new Printable("1500A2", "BR"));
printableMap.set(743, new Printable("1500A9", "BL"));
printableMap.set(746, new Printable("1500A12", "BR"));
printableMap.set(748, new Printable("1500A19", "BL"));
printableMap.set(751, new Printable("1500B2", "BR"));
printableMap.set(753, new Printable("1500B9", "BL"));
printableMap.set(756, new Printable("1500B12", "BR"));
printableMap.set(758, new Printable("1500B19", "BL"));
printableMap.set(761, new Printable("1500C2", "BR"));
printableMap.set(763, new Printable("1500C9", "BL"));
printableMap.set(766, new Printable("1500C12", "BR"));
printableMap.set(768, new Printable("1500C19", "BL"));
printableMap.set(846, new Printable("1500A1", "TR"));
printableMap.set(848, new Printable("1500A10", "TL"));
printableMap.set(851, new Printable("1500A11", "TR"));
printableMap.set(853, new Printable("1500A20", "TL"));
printableMap.set(856, new Printable("1500B1", "TR"));
printableMap.set(858, new Printable("1500B10", "TL"));
printableMap.set(861, new Printable("1500B11", "TR"));
printableMap.set(863, new Printable("1500B20", "TL"));
printableMap.set(866, new Printable("1500C1", "TR"));
printableMap.set(868, new Printable("1500C10", "TL"));
printableMap.set(871, new Printable("1500C11", "TR"));
printableMap.set(873, new Printable("1500C20", "TL"));
printableMap.set(936, new Printable("1560A1", "BR"));
printableMap.set(938, new Printable("1560A2", "BR"));
printableMap.set(939, new Printable("1560A3", "BL"));
printableMap.set(941, new Printable("1560A4", "BL"));
printableMap.set(948, new Printable("1500B", "TR"));
printableMap.set(985, new Printable("1518", "BL"));
printableMap.set(1146, new Printable("1560A8", "TR"));
printableMap.set(1148, new Printable("1560A7", "TR"));
printableMap.set(1149, new Printable("1560A6", "TL"));
printableMap.set(1151, new Printable("1560A5", "TL"));
printableMap.set(1338, new Printable("1540F", "TL"));
printableMap.set(1368, new Printable("1500A", "TR"));
printableMap.set(1371, new Printable("1504B1", "BR"));
printableMap.set(1373, new Printable("1504B2", "BR"));
printableMap.set(1374, new Printable("1504B3", "BL"));
printableMap.set(1378, new Printable("1504B5", "BL"));
printableMap.set(1382, new Printable("1504A", "TL"));
printableMap.set(1461, new Printable("1560A9", "BR"));
printableMap.set(1463, new Printable("1560A10", "BR"));
printableMap.set(1464, new Printable("1560A11", "BL"));
printableMap.set(1466, new Printable("1560A12", "BL"));
printableMap.set(1581, new Printable("1504B10", "TR"));
printableMap.set(1583, new Printable("1504B9", "TR"));
printableMap.set(1584, new Printable("1504B8", "TL"));
printableMap.set(1587, new Printable("1504B7", "TR"));
printableMap.set(1588, new Printable("1504B6", "TL"));
printableMap.set(1671, new Printable("1560A16", "TR"));
printableMap.set(1673, new Printable("1560A15", "TR"));
printableMap.set(1674, new Printable("1560A14", "TL"));
printableMap.set(1676, new Printable("1560A13", "TL"));
printableMap.set(1802, new Printable("1504B", "TL"));
printableMap.set(1891, new Printable("1504A2", "BR"));
printableMap.set(1892, new Printable("1504A1", "BL"));
printableMap.set(1896, new Printable("1504B11", "BR"));
printableMap.set(1898, new Printable("1504B12", "BR"));
printableMap.set(1899, new Printable("1504B13", "BL"));
printableMap.set(1902, new Printable("1504B14", "BR"));
printableMap.set(1903, new Printable("1504B15", "BL"));
printableMap.set(1986, new Printable("1560A17", "BR"));
printableMap.set(1988, new Printable("1560A18", "BR"));
printableMap.set(1989, new Printable("1560A19", "BL"));
printableMap.set(1991, new Printable("1560A20", "BL"));
printableMap.set(2102, new Printable("1504A4", "TL"));
printableMap.set(2106, new Printable("1504B20", "TR"));
printableMap.set(2108, new Printable("1504B19", "TR"));
printableMap.set(2109, new Printable("1504B18", "TL"));
printableMap.set(2113, new Printable("1504B16", "TL"));
printableMap.set(2196, new Printable("1560A24", "TR"));
printableMap.set(2198, new Printable("1560A23", "TR"));
printableMap.set(2199, new Printable("1560A22", "TL"));
printableMap.set(2201, new Printable("1560A21", "TL"));
printableMap.set(2222, new Printable("1504C", "TL"));
printableMap.set(2280, new Printable("1540A", "TR"));
printableMap.set(2416, new Printable("1504A6", "BR"));
printableMap.set(2417, new Printable("1504A5", "BL"));
printableMap.set(2421, new Printable("1504B21", "BR"));
printableMap.set(2423, new Printable("1504B22", "BR"));
printableMap.set(2424, new Printable("1504B23", "BL"));
printableMap.set(2427, new Printable("1504B24", "BR"));
printableMap.set(2428, new Printable("1504B25", "BL"));
printableMap.set(2511, new Printable("1560A25", "BR"));
printableMap.set(2513, new Printable("1560A26", "BR"));
printableMap.set(2514, new Printable("1560A27", "BL"));
printableMap.set(2516, new Printable("1560A28", "BL"));
printableMap.set(2595, new Printable("1540B", "BR"));
printableMap.set(2626, new Printable("1504A7", "TR"));
printableMap.set(2627, new Printable("1504A8", "TL"));
printableMap.set(2631, new Printable("1504B30", "TR"));
printableMap.set(2633, new Printable("1504B29", "TR"));
printableMap.set(2634, new Printable("1504B28", "TL"));
printableMap.set(2637, new Printable("1504B27", "TR"));
printableMap.set(2638, new Printable("1504B26", "TL"));
printableMap.set(2642, new Printable("1504D", "TL"));
printableMap.set(2703, new Printable("1540D", "TL"));
printableMap.set(2721, new Printable("1560A32", "TR"));
printableMap.set(2723, new Printable("1560A31", "TR"));
printableMap.set(2724, new Printable("1560A30", "TL"));
printableMap.set(2726, new Printable("1560A29", "TL"));
printableMap.set(2941, new Printable("1504A10", "BR"));
printableMap.set(2942, new Printable("1504A9", "BL"));
printableMap.set(2946, new Printable("1504B31", "BR"));
printableMap.set(2948, new Printable("1504B32", "BR"));
printableMap.set(2949, new Printable("1504B33", "BL"));
printableMap.set(2952, new Printable("1504B34", "BR"));
printableMap.set(2953, new Printable("1504B35", "BL"));
printableMap.set(2957, new Printable("1504E", "TL"));
printableMap.set(3036, new Printable("1560A33", "BR"));
printableMap.set(3038, new Printable("1560A34", "BR"));
printableMap.set(3039, new Printable("1560A35", "BL"));
printableMap.set(3041, new Printable("1560A36", "BL"));
printableMap.set(3151, new Printable("1504A11", "TR"));
printableMap.set(3152, new Printable("1504A12", "TL"));
printableMap.set(3156, new Printable("1504B40", "TR"));
printableMap.set(3158, new Printable("1504B39", "TR"));
printableMap.set(3159, new Printable("1504B38", "TL"));
printableMap.set(3162, new Printable("1504B37", "TR"));
printableMap.set(3163, new Printable("1504B36", "TL"));
printableMap.set(3246, new Printable("1560A40", "TR"));
printableMap.set(3248, new Printable("1560A39", "TR"));
printableMap.set(3249, new Printable("1560A38", "TL"));
printableMap.set(3251, new Printable("1560A37", "TL"));
printableMap.set(3467, new Printable("1504A13", "BL"));
printableMap.set(3471, new Printable("1504B41", "BR"));
printableMap.set(3473, new Printable("1504B42", "BR"));
printableMap.set(3474, new Printable("1504B43", "BL"));
printableMap.set(3478, new Printable("1504B45", "BL"));
printableMap.set(3666, new Printable("1560H", "TL"));
printableMap.set(3668, new Printable("1560G", "TR"));
printableMap.set(3670, new Printable("1560F", "TR"));
printableMap.set(3676, new Printable("1504A15", "TR"));
printableMap.set(3677, new Printable("1504A16", "TL"));
printableMap.set(3681, new Printable("1504B50", "TR"));
printableMap.set(3683, new Printable("1504B49", "TR"));
printableMap.set(3684, new Printable("1504B48", "TL"));
printableMap.set(3687, new Printable("1504B47", "TR"));
printableMap.set(3688, new Printable("1504B46", "TL"));
printableMap.set(3802, new Printable("1521B", "TR"));
printableMap.set(3814, new Printable("1521C", "TR"));
printableMap.set(3824, new Printable("1521D", "TR"));
printableMap.set(3933, new Printable("1525A4", "BR"));
printableMap.set(3934, new Printable("1525A3", "BL"));
printableMap.set(3937, new Printable("1525A2", "BR"));
printableMap.set(3938, new Printable("1525A1", "BL"));
printableMap.set(3991, new Printable("1504A18", "BR"));
printableMap.set(3992, new Printable("1504A17", "BL"));
printableMap.set(3996, new Printable("1504B51", "BR"));
printableMap.set(3998, new Printable("1504B52", "BR"));
printableMap.set(3999, new Printable("1504B53", "BL"));
printableMap.set(4002, new Printable("1504B54", "BR"));
printableMap.set(4003, new Printable("1504B55", "BL"));
printableMap.set(4068, new Printable("1576A1", "BR"));
printableMap.set(4069, new Printable("1576A2", "BL"));
printableMap.set(4086, new Printable("1580A1", "BR"));
printableMap.set(4088, new Printable("1580A2", "BR"));
printableMap.set(4089, new Printable("1580A3", "BL"));
printableMap.set(4091, new Printable("1580A4", "BL"));
printableMap.set(4112, new Printable("1515A", "TL"));
printableMap.set(4143, new Printable("1525A5", "TR"));
printableMap.set(4144, new Printable("1525A6", "TL"));
printableMap.set(4147, new Printable("1525A7", "TR"));
printableMap.set(4148, new Printable("1525A8", "TL"));
printableMap.set(4169, new Printable("1576A", "TR"));
printableMap.set(4201, new Printable("1504A19", "TR"));
printableMap.set(4202, new Printable("1504A20", "TL"));
printableMap.set(4206, new Printable("1504B60", "TR"));
printableMap.set(4208, new Printable("1504B59", "TR"));
printableMap.set(4209, new Printable("1504B58", "TL"));
printableMap.set(4212, new Printable("1504B57", "TR"));
printableMap.set(4213, new Printable("1504B56", "TL"));
printableMap.set(4278, new Printable("1576A4", "TR"));
printableMap.set(4279, new Printable("1576A3", "TL"));
printableMap.set(4296, new Printable("1580A8", "TR"));
printableMap.set(4298, new Printable("1580A7", "TR"));
printableMap.set(4299, new Printable("1580A6", "TL"));
printableMap.set(4301, new Printable("1580A5", "TL"));
printableMap.set(4458, new Printable("1525A12", "BR"));
printableMap.set(4459, new Printable("1525A11", "BL"));
printableMap.set(4462, new Printable("1525A10", "BR"));
printableMap.set(4463, new Printable("1525A9", "BL"));
printableMap.set(4478, new Printable("1585A", "TR"));
printableMap.set(4494, new Printable("1576B1", "BR"));
printableMap.set(4496, new Printable("1576B2", "BR"));
printableMap.set(4497, new Printable("1576B3", "BL"));
printableMap.set(4500, new Printable("1576B4", "BR"));
printableMap.set(4501, new Printable("1576B5", "BL"));
printableMap.set(4589, new Printable("1576B", "TR"));
printableMap.set(4593, new Printable("1576A5", "BR"));
printableMap.set(4594, new Printable("1576A6", "BL"));
printableMap.set(4611, new Printable("1580A9", "BR"));
printableMap.set(4613, new Printable("1580A10", "BR"));
printableMap.set(4614, new Printable("1580A11", "BL"));
printableMap.set(4616, new Printable("1580A12", "BL"));
printableMap.set(4669, new Printable("1525A14", "TL"));
printableMap.set(4672, new Printable("1525A15", "TR"));
printableMap.set(4673, new Printable("1525A16", "TL"));
printableMap.set(4706, new Printable("1576B9", "TR"));
printableMap.set(4707, new Printable("1576B8", "TL"));
printableMap.set(4710, new Printable("1576B7", "TR"));
printableMap.set(4729, new Printable("1505A7", "BR"));
printableMap.set(4731, new Printable("1505A20", "BL"));
printableMap.set(4734, new Printable("1505A21", "BR"));
printableMap.set(4743, new Printable("1515B", "BR"));
printableMap.set(4745, new Printable("1515C", "BR"));
printableMap.set(4748, new Printable("1515D", "BR"));
printableMap.set(4751, new Printable("1515E", "BR"));
printableMap.set(4754, new Printable("1515F", "BR"));
printableMap.set(4757, new Printable("1515G", "BR"));
printableMap.set(4760, new Printable("1515H", "BR"));
printableMap.set(4763, new Printable("1515I", "BR"));
printableMap.set(4766, new Printable("1515J", "BR"));
printableMap.set(4786, new Printable("1525C", "BL"));
printableMap.set(4803, new Printable("1576A8", "TR"));
printableMap.set(4804, new Printable("1576A7", "TL"));
printableMap.set(4821, new Printable("1580A16", "TR"));
printableMap.set(4823, new Printable("1580A15", "TR"));
printableMap.set(4824, new Printable("1580A14", "TL"));
printableMap.set(4826, new Printable("1580A13", "TL"));
printableMap.set(4834, new Printable("1505A8", "TR"));
printableMap.set(4836, new Printable("1505A19", "TL"));
printableMap.set(4839, new Printable("1505A22", "TR"));
printableMap.set(4841, new Printable("1505A33", "TL"));
printableMap.set(4936, new Printable("1505A2", "BR"));
printableMap.set(5019, new Printable("1576B11", "BR"));
printableMap.set(5021, new Printable("1576B12", "BR"));
printableMap.set(5022, new Printable("1576B13", "BL"));
printableMap.set(5025, new Printable("1576B14", "BR"));
printableMap.set(5026, new Printable("1576B15", "BL"));
printableMap.set(5041, new Printable("1505A3", "TR"));
printableMap.set(5088, new Printable("1525A20", "TR"));
printableMap.set(5089, new Printable("1525A19", "TL"));
printableMap.set(5092, new Printable("1525A18", "TR"));
printableMap.set(5093, new Printable("1525A17", "TL"));
printableMap.set(5108, new Printable("1585B", "TR"));
printableMap.set(5114, new Printable("1576C", "TR"));
printableMap.set(5118, new Printable("1579A9", "BR"));
printableMap.set(5119, new Printable("1576A10", "BL"));
printableMap.set(5136, new Printable("1580A17", "BR"));
printableMap.set(5138, new Printable("1580A18", "BR"));
printableMap.set(5139, new Printable("1580A19", "BL"));
printableMap.set(5141, new Printable("1580A20", "BL"));
printableMap.set(5149, new Printable("1505A9", "BR"));
printableMap.set(5151, new Printable("1505A18", "BL"));
printableMap.set(5154, new Printable("1505A23", "BR"));
printableMap.set(5156, new Printable("1505A32", "BL"));
printableMap.set(5163, new Printable("1515A1", "BR"));
printableMap.set(5166, new Printable("1515A6", "BR"));
printableMap.set(5168, new Printable("1515A15", "BL"));
printableMap.set(5171, new Printable("1515B1", "BR"));
printableMap.set(5173, new Printable("1515B10", "BL"));
printableMap.set(5176, new Printable("1515B11", "BR"));
printableMap.set(5178, new Printable("1515B20", "BL"));
printableMap.set(5181, new Printable("1515C1", "BR"));
printableMap.set(5183, new Printable("1515C10", "BL"));
printableMap.set(5186, new Printable("1515C11", "BR"));
printableMap.set(5188, new Printable("1515C20", "BL"));
printableMap.set(5203, new Printable("1525H16", "BR"));
printableMap.set(5204, new Printable("1525H15", "BL"));
printableMap.set(5207, new Printable("1525H14", "BR"));
printableMap.set(5209, new Printable("1525H13", "BR"));
printableMap.set(5229, new Printable("1576B20", "TR"));
printableMap.set(5231, new Printable("1576B19", "TR"));
printableMap.set(5232, new Printable("1576B18", "TL"));
printableMap.set(5235, new Printable("1576B17", "TR"));
printableMap.set(5236, new Printable("1576B16", "TL"));
printableMap.set(5254, new Printable("1505A10", "TR"));
printableMap.set(5256, new Printable("1505A17", "TL"));
printableMap.set(5259, new Printable("1505A24", "TR"));
printableMap.set(5261, new Printable("1505A31", "TL"));
printableMap.set(5268, new Printable("1515A2", "TR"));
printableMap.set(5271, new Printable("1515A7", "TR"));
printableMap.set(5273, new Printable("1515A14", "TL"));
printableMap.set(5276, new Printable("1515B2", "TR"));
printableMap.set(5278, new Printable("1515B9", "TL"));
printableMap.set(5281, new Printable("1515B12", "TR"));
printableMap.set(5283, new Printable("1515B19", "TL"));
printableMap.set(5286, new Printable("1515C2", "TR"));
printableMap.set(5288, new Printable("1515C9", "TL"));
printableMap.set(5291, new Printable("1515C12", "TR"));
printableMap.set(5293, new Printable("1515C19", "TL"));
printableMap.set(5328, new Printable("1576A12", "TR"));
printableMap.set(5329, new Printable("1576A11", "TL"));
printableMap.set(5346, new Printable("1580A24", "TR"));
printableMap.set(5348, new Printable("1580A23", "TR"));
printableMap.set(5349, new Printable("1580A22", "TL"));
printableMap.set(5351, new Printable("1580A21", "TL"));
printableMap.set(5356, new Printable("1505A4", "BR"));
printableMap.set(5403, new Printable("1525B4", "BR"));
printableMap.set(5404, new Printable("1525B3", "BL"));
printableMap.set(5407, new Printable("1525B2", "BR"));
printableMap.set(5408, new Printable("1525B1", "BL"));
printableMap.set(5413, new Printable("1525H9", "TR"));
printableMap.set(5414, new Printable("1525H10", "TL"));
printableMap.set(5417, new Printable("1525H11", "TR"));
printableMap.set(5419, new Printable("1525H12", "TR"));
printableMap.set(5429, new Printable("1576D", "TR"));
printableMap.set(5461, new Printable("1505A5", "TR"));
printableMap.set(5544, new Printable("1576B21", "BR"));
printableMap.set(5546, new Printable("1576B22", "BR"));
printableMap.set(5547, new Printable("1576B23", "BL"));
printableMap.set(5550, new Printable("1576B24", "BR"));
printableMap.set(5551, new Printable("1576B25", "BL"));
printableMap.set(5569, new Printable("1505A11", "BR"));
printableMap.set(5571, new Printable("1505A16", "BL"));
printableMap.set(5574, new Printable("1505A25", "BR"));
printableMap.set(5576, new Printable("1505A30", "BL"));
printableMap.set(5583, new Printable("1515A3", "BR"));
printableMap.set(5586, new Printable("1515A8", "BR"));
printableMap.set(5588, new Printable("1515A13", "BL"));
printableMap.set(5591, new Printable("1515B3", "BR"));
printableMap.set(5593, new Printable("1515B8", "BL"));
printableMap.set(5596, new Printable("1515B13", "BR"));
printableMap.set(5598, new Printable("1515B18", "BL"));
printableMap.set(5601, new Printable("1515C3", "BR"));
printableMap.set(5603, new Printable("1515C8", "BL"));
printableMap.set(5606, new Printable("1515C13", "BR"));
printableMap.set(5608, new Printable("1515C18", "BL"));
printableMap.set(5613, new Printable("1525B5", "TR"));
printableMap.set(5614, new Printable("1525B6", "TL"));
printableMap.set(5617, new Printable("1525B7", "TR"));
printableMap.set(5618, new Printable("1525B8", "TL"));
printableMap.set(5643, new Printable("1576A13", "BR"));
printableMap.set(5644, new Printable("1576A14", "BL"));
printableMap.set(5661, new Printable("1580B1", "BR"));
printableMap.set(5663, new Printable("1580B2", "BR"));
printableMap.set(5664, new Printable("1580B3", "BL"));
printableMap.set(5666, new Printable("1580B4", "BL"));
printableMap.set(5671, new Printable("1505A6", "TR"));
printableMap.set(5674, new Printable("1505A12", "TR"));
printableMap.set(5676, new Printable("1505A15", "TL"));
printableMap.set(5679, new Printable("1505A26", "TR"));
printableMap.set(5681, new Printable("1505A29", "TL"));
printableMap.set(5688, new Printable("1515A4", "TR"));
printableMap.set(5691, new Printable("1515A9", "TR"));
printableMap.set(5693, new Printable("1515A12", "TL"));
printableMap.set(5696, new Printable("1515B4", "TR"));
printableMap.set(5698, new Printable("1515B7", "TL"));
printableMap.set(5701, new Printable("1515B14", "TR"));
printableMap.set(5703, new Printable("1515B17", "TL"));
printableMap.set(5706, new Printable("1515C4", "TR"));
printableMap.set(5708, new Printable("1515C7", "TL"));
printableMap.set(5711, new Printable("1515C14", "TR"));
printableMap.set(5713, new Printable("1515C17", "TL"));
printableMap.set(5728, new Printable("1525H8", "BR"));
printableMap.set(5729, new Printable("1525H7", "BL"));
printableMap.set(5732, new Printable("1525H6", "BR"));
printableMap.set(5734, new Printable("1525H5", "BR"));
printableMap.set(5744, new Printable("1576E", "TR"));
printableMap.set(5754, new Printable("1576B30", "TR"));
printableMap.set(5756, new Printable("1576B29", "TR"));
printableMap.set(5757, new Printable("1576B28", "TL"));
printableMap.set(5760, new Printable("1576B27", "TR"));
printableMap.set(5761, new Printable("1576B26", "TL"));
printableMap.set(5853, new Printable("1576A16", "TR"));
printableMap.set(5854, new Printable("1576A15", "TL"));
printableMap.set(5871, new Printable("1580B8", "TR"));
printableMap.set(5873, new Printable("1580B7", "TR"));
printableMap.set(5874, new Printable("1580B6", "TL"));
printableMap.set(5876, new Printable("1580B5", "TL"));
printableMap.set(5884, new Printable("1505A13", "TR"));
printableMap.set(5886, new Printable("1505A14", "TL"));
printableMap.set(5889, new Printable("1505A27", "TR"));
printableMap.set(5898, new Printable("1515A5", "TR"));
printableMap.set(5901, new Printable("1515A10", "TR"));
printableMap.set(5906, new Printable("1515B5", "TR"));
printableMap.set(5908, new Printable("1515B6", "TL"));
printableMap.set(5911, new Printable("1515B15", "TR"));
printableMap.set(5913, new Printable("1515B16", "TL"));
printableMap.set(5918, new Printable("1515C6", "TL"));
printableMap.set(5921, new Printable("1515C15", "TR"));
printableMap.set(5923, new Printable("1515C16", "TL"));
printableMap.set(5932, new Printable("1525B10", "BR"));
printableMap.set(5933, new Printable("1525B9", "BL"));
printableMap.set(5938, new Printable("1525H1", "TR"));
printableMap.set(5942, new Printable("1525H3", "TR"));
printableMap.set(5944, new Printable("1525H4", "TR"));
printableMap.set(6071, new Printable("1576B32", "BR"));
printableMap.set(6072, new Printable("1576B33", "BL"));
printableMap.set(6075, new Printable("1576B34", "BR"));
printableMap.set(6138, new Printable("1525B13", "TR"));
printableMap.set(6139, new Printable("1525B14", "TL"));
printableMap.set(6142, new Printable("1525B15", "TR"));
printableMap.set(6143, new Printable("1525B16", "TL"));
printableMap.set(6164, new Printable("1576F", "TR"));
printableMap.set(6168, new Printable("1576A17", "BR"));
printableMap.set(6169, new Printable("1576A18", "BL"));
printableMap.set(6186, new Printable("1580B9", "BR"));
printableMap.set(6188, new Printable("1580B10", "BR"));
printableMap.set(6189, new Printable("1580B11", "BL"));
printableMap.set(6191, new Printable("1580B12", "BL"));
printableMap.set(6253, new Printable("1525G24", "BR"));
printableMap.set(6254, new Printable("1525G23", "BL"));
printableMap.set(6257, new Printable("1525G22", "BR"));
printableMap.set(6259, new Printable("1525G21", "BR"));
printableMap.set(6263, new Printable("1585C", "TR"));
printableMap.set(6279, new Printable("1576B40", "TR"));
printableMap.set(6281, new Printable("1576B39", "TR"));
printableMap.set(6282, new Printable("1576B38", "TL"));
printableMap.set(6285, new Printable("1576B37", "TR"));
printableMap.set(6286, new Printable("1576B36", "TL"));
printableMap.set(6378, new Printable("1576A20", "TR"));
printableMap.set(6379, new Printable("1576A19", "TL"));
printableMap.set(6396, new Printable("1580B16", "TR"));
printableMap.set(6398, new Printable("1580B15", "TR"));
printableMap.set(6399, new Printable("1580B14", "TL"));
printableMap.set(6401, new Printable("1580B13", "TL"));
printableMap.set(6453, new Printable("1525C4", "BR"));
printableMap.set(6454, new Printable("1525C3", "BL"));
printableMap.set(6457, new Printable("1525C2", "BR"));
printableMap.set(6458, new Printable("1525C1", "BL"));
printableMap.set(6463, new Printable("1525G17", "TR"));
printableMap.set(6464, new Printable("1525G18", "TL"));
printableMap.set(6467, new Printable("1525G19", "TR"));
printableMap.set(6469, new Printable("1525G20", "TR"));
printableMap.set(6479, new Printable("1576G", "TR"));
printableMap.set(6594, new Printable("1576B41", "BR"));
printableMap.set(6596, new Printable("1576B42", "BR"));
printableMap.set(6597, new Printable("1576B43", "BL"));
printableMap.set(6600, new Printable("1576B44", "BR"));
printableMap.set(6601, new Printable("1576B45", "BL"));
printableMap.set(6663, new Printable("1525C5", "TR"));
printableMap.set(6664, new Printable("1525C6", "TL"));
printableMap.set(6667, new Printable("1525C7", "TR"));
printableMap.set(6668, new Printable("1525C8", "TL"));
printableMap.set(6693, new Printable("1576A21", "BR"));
printableMap.set(6694, new Printable("1576A22", "BL"));
printableMap.set(6711, new Printable("1580B17", "BR"));
printableMap.set(6713, new Printable("1580B18", "BR"));
printableMap.set(6714, new Printable("1580B19", "BL"));
printableMap.set(6716, new Printable("1580B20", "BL"));
printableMap.set(6778, new Printable("1525G16", "BR"));
printableMap.set(6779, new Printable("1525G15", "BL"));
printableMap.set(6782, new Printable("1525G14", "BR"));
printableMap.set(6784, new Printable("1525G13", "BR"));
printableMap.set(6899, new Printable("1576H", "TR"));
printableMap.set(6903, new Printable("1576A24", "TR"));
printableMap.set(6904, new Printable("1576A23", "TL"));
printableMap.set(6908, new Printable("1576C1", "BL"));
printableMap.set(6911, new Printable("1576C8", "BR"));
printableMap.set(6914, new Printable("1576C9", "BL"));
printableMap.set(6917, new Printable("1576C16", "BR"));
printableMap.set(6921, new Printable("1580B24", "TR"));
printableMap.set(6923, new Printable("1580B23", "TR"));
printableMap.set(6924, new Printable("1580B22", "TL"));
printableMap.set(6926, new Printable("1580B21", "TL"));
printableMap.set(6978, new Printable("1525C12", "BR"));
printableMap.set(6979, new Printable("1525C11", "BL"));
printableMap.set(6982, new Printable("1525C10", "BR"));
printableMap.set(6983, new Printable("1525C9", "BL"));
printableMap.set(6988, new Printable("1525G9", "TR"));
printableMap.set(6989, new Printable("1525G10", "TL"));
printableMap.set(6992, new Printable("1525G11", "TR"));
printableMap.set(6994, new Printable("1525G12", "TR"));
printableMap.set(7013, new Printable("1576C2", "TL"));
printableMap.set(7016, new Printable("1576C7", "TR"));
printableMap.set(7019, new Printable("1576C10", "TL"));
printableMap.set(7103, new Printable("1585D", "TR"));
printableMap.set(7189, new Printable("1525C14", "TL"));
printableMap.set(7192, new Printable("1525C15", "TR"));
printableMap.set(7193, new Printable("1525C16", "TL"));
printableMap.set(7214, new Printable("1576I", "BR"));
printableMap.set(7218, new Printable("1576A25", "BR"));
printableMap.set(7219, new Printable("1576A26", "BL"));
printableMap.set(7236, new Printable("1580C1", "BR"));
printableMap.set(7238, new Printable("1580C2", "BR"));
printableMap.set(7239, new Printable("1580C3", "BL"));
printableMap.set(7241, new Printable("1580C4", "BL"));
printableMap.set(7303, new Printable("1525G8", "BR"));
printableMap.set(7307, new Printable("1525G6", "BR"));
printableMap.set(7309, new Printable("1525G5", "BR"));
printableMap.set(7331, new Printable("1576C6", "BR"));
printableMap.set(7334, new Printable("1576C11", "BL"));
printableMap.set(7428, new Printable("1576A28", "TR"));
printableMap.set(7429, new Printable("1576A27", "TL"));
printableMap.set(7433, new Printable("1576C4", "TL"));
printableMap.set(7436, new Printable("1576C5", "TR"));
printableMap.set(7439, new Printable("1576C12", "TL"));
printableMap.set(7442, new Printable("1576C13", "TR"));
printableMap.set(7446, new Printable("1580C8", "TR"));
printableMap.set(7448, new Printable("1580C7", "TR"));
printableMap.set(7449, new Printable("1580C6", "TL"));
printableMap.set(7451, new Printable("1580C5", "TL"));
printableMap.set(7503, new Printable("1525D4", "BR"));
printableMap.set(7504, new Printable("1525D3", "BL"));
printableMap.set(7507, new Printable("1525D2", "BR"));
printableMap.set(7508, new Printable("1525D1", "BL"));
printableMap.set(7513, new Printable("1525G1", "TR"));
printableMap.set(7514, new Printable("1525G2", "TL"));
printableMap.set(7517, new Printable("1525G3", "TR"));
printableMap.set(7519, new Printable("1525G4", "TR"));
printableMap.set(7713, new Printable("1525D5", "TR"));
printableMap.set(7714, new Printable("1525D6", "TL"));
printableMap.set(7717, new Printable("1525D7", "TR"));
printableMap.set(7718, new Printable("1525D8", "TL"));
printableMap.set(7761, new Printable("1580C9", "BR"));
printableMap.set(7763, new Printable("1580C10", "BR"));
printableMap.set(7764, new Printable("1580C11", "BL"));
printableMap.set(7766, new Printable("1580C12", "BL"));
printableMap.set(7971, new Printable("1580C16", "TR"));
printableMap.set(7973, new Printable("1580C15", "TR"));
printableMap.set(7974, new Printable("1580C14", "TL"));
printableMap.set(7976, new Printable("1580C13", "TL"));
printableMap.set(8028, new Printable("1525D12", "BR"));
printableMap.set(8029, new Printable("1525D11", "BL"));
printableMap.set(8032, new Printable("1525D10", "BR"));
printableMap.set(8033, new Printable("1525D9", "BL"));
printableMap.set(8038, new Printable("1525F24", "BR"));
printableMap.set(8039, new Printable("1525F23", "BL"));
printableMap.set(8042, new Printable("1525F22", "BR"));
printableMap.set(8044, new Printable("1525F21", "BR"));
printableMap.set(8238, new Printable("1525D13", "TR"));
printableMap.set(8239, new Printable("1525D14", "TL"));
printableMap.set(8242, new Printable("1525D15", "TR"));
printableMap.set(8243, new Printable("1525D16", "TL"));
printableMap.set(8248, new Printable("1525F17", "TR"));
printableMap.set(8249, new Printable("1525F18", "TL"));
printableMap.set(8252, new Printable("1525F19", "TR"));
printableMap.set(8254, new Printable("1525F20", "TR"));
printableMap.set(8286, new Printable("1580C17", "BR"));
printableMap.set(8288, new Printable("1580C18", "BR"));
printableMap.set(8289, new Printable("1580C19", "BL"));
printableMap.set(8291, new Printable("1580C20", "BL"));
printableMap.set(8554, new Printable("1525E3", "BL"));
printableMap.set(8557, new Printable("1525E2", "BR"));
printableMap.set(8558, new Printable("1525E1", "BL"));
printableMap.set(8563, new Printable("1525F16", "BR"));
printableMap.set(8567, new Printable("1525F14", "BR"));
printableMap.set(8569, new Printable("1525F13", "BR"));
printableMap.set(8678, new Printable("1585F", "TR"));
printableMap.set(8763, new Printable("1525E5", "TR"));
printableMap.set(8764, new Printable("1525E6", "TL"));
printableMap.set(8767, new Printable("1525E7", "TR"));
printableMap.set(8768, new Printable("1525E8", "TL"));
printableMap.set(8773, new Printable("1525F9", "TR"));
printableMap.set(8774, new Printable("1525F10", "TL"));
printableMap.set(8777, new Printable("1525F11", "TR"));
printableMap.set(8779, new Printable("1525F12", "TR"));
printableMap.set(9078, new Printable("1525E12", "BR"));
printableMap.set(9079, new Printable("1525E11", "BL"));
printableMap.set(9082, new Printable("1525E10", "BR"));
printableMap.set(9083, new Printable("1525E9", "BL"));
printableMap.set(9088, new Printable("1525F8", "BR"));
printableMap.set(9089, new Printable("1525F7", "BL"));
printableMap.set(9092, new Printable("1525F6", "BR"));
printableMap.set(9094, new Printable("1525F5", "BR"));
printableMap.set(9098, new Printable("1585G", "TR"));
printableMap.set(9288, new Printable("1525E13", "TR"));
printableMap.set(9289, new Printable("1525E14", "TL"));
printableMap.set(9292, new Printable("1525E15", "TR"));
printableMap.set(9293, new Printable("1525E16", "TL"));
printableMap.set(9298, new Printable("1525F1", "TR"));
printableMap.set(9299, new Printable("1525F1", "TL"));
printableMap.set(9302, new Printable("1525F3", "TR"));
printableMap.set(9304, new Printable("1525F4", "TR"));
printableMap.set(9603, new Printable("1525E20", "BR"));
printableMap.set(9604, new Printable("1525E19", "BL"));
printableMap.set(9607, new Printable("1525E18", "BR"));
printableMap.set(9608, new Printable("1525E17", "BL"));
printableMap.set(9827, new Printable("1593A13", "BL"));
printableMap.set(9830, new Printable("1593A12", "BR"));
printableMap.set(9832, new Printable("1593A1", "BL"));
printableMap.set(9932, new Printable("1593A14", "TL"));
printableMap.set(9935, new Printable("1593A11", "TR"));
printableMap.set(9937, new Printable("1593A2", "TL"));
printableMap.set(10247, new Printable("1593A15", "BL"));
printableMap.set(10250, new Printable("1593A10", "BR"));
printableMap.set(10252, new Printable("1593A3", "BL"));
printableMap.set(10352, new Printable("1593A16", "TL"));
printableMap.set(10355, new Printable("1593A9", "TR"));
printableMap.set(10357, new Printable("1593A4", "TL"));
printableMap.set(10667, new Printable("1593A17", "BL"));
printableMap.set(10670, new Printable("1593A8", "BR"));
printableMap.set(10672, new Printable("1593A5", "BL"));
printableMap.set(10772, new Printable("1593A18", "TL"));
printableMap.set(10775, new Printable("1593A7", "TR"));
printableMap.set(10777, new Printable("1593A6", "TL"));

const colors = ["#D1D5DB", "#93C5FD", "#86EFAC", "#F87171", "#86EFAC"];

makePlayGround();
populateDropdown();
function makePlayGround() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  drawOfficeMap();
  drawTextOnCubicles();
}

function drawOfficeMap() {
  for (let r = 0; r < rows; r++) {
    for (let c = 0; c < cols; c++) {
      const type = office[r][c];
      const x = c * blockSize + 1;
      const y = r * blockSize + 1;

      // Draw cell background
      ctx.fillStyle = colors[type];
      ctx.fillRect(x, y, blockSize, blockSize);
    }
  }
}

function drawTextOnCubicles() {
  for (let r = 0; r < rows; r++) {
    for (let c = 0; c < cols; c++) {
      const type = office[r][c];
      if (type === 4) {
        const x = c * blockSize + blockSize / 3;
        const y = r * blockSize + 1;

        ctx.font = "12px Arial";
        ctx.textBaseline = "middle";
        ctx.fillStyle = "black";
        const temp = printableMap.get(cols * r + c);
        if (temp) {
          let adjustedX = x;
          let adjustedY = y;

          if (temp.textOrientation === "TR") {
            adjustedX -= blockSize;
            adjustedY += blockSize;
          }
          if (temp.textOrientation === "BR") {
            adjustedX -= blockSize;
          }
          if (temp.textOrientation === "TL") {
            adjustedY += blockSize;
          }

          ctx.fillText(
            `${temp.name}`,
            Math.floor(adjustedX),
            Math.floor(adjustedY)
          );
        }
      }
    }
  }
}

function FindPath() {
  const startDropdown = document.getElementById("startPoint");
  const endDropdown = document.getElementById("endPoint");

  const startKey = parseInt(startDropdown.value, 10);
  const endKey = parseInt(endDropdown.value, 10);

  const path = implement_a_star(startKey, endKey);
  currentPath = path;
  makePlayGround();
  Drawpath(path);

  centerOnCell(startKey);
}

function centerOnCell(key) {
  const container = document.querySelector(".container");
  const cellCol = key % cols;
  const cellRow = Math.floor(key / cols);

  const cellX = cellCol * blockSize;
  const cellY = cellRow * blockSize;

  // Center the scroll so that the start point is in the middle
  container.scrollLeft = cellX - container.clientWidth / 2 + blockSize / 2;
  container.scrollTop = cellY - container.clientHeight / 2 + blockSize / 2;
}

function Drawpath(path) {
  path.forEach((element) => {
    const x = (element % cols) * blockSize + blockSize / 2;
    const y = Math.floor(element / cols) * blockSize + blockSize / 2;
    ctx.beginPath();
    ctx.arc(x, y, blockSize / 4, 0, 2 * Math.PI);
    ctx.fillStyle = "red";
    ctx.fill();
    ctx.closePath();
  });
}

function populateDropdown() {
  const startDropdown = document.getElementById("startPoint");
  const endDropdown = document.getElementById("endPoint");

  startDropdown.innerHTML = "";
  endDropdown.innerHTML = "";

  // Convert Map entries to array and sort by natural order of name
  const sortedEntries = Array.from(printableMap.entries()).sort((a, b) =>
    a[1].name.localeCompare(b[1].name, undefined, {
      numeric: true,
      sensitivity: "base",
    })
  );

  sortedEntries.forEach(([key, value]) => {
    const optionStart = document.createElement("option");
    optionStart.value = key;
    optionStart.textContent = value.name;
    startDropdown.appendChild(optionStart);

    const optionEnd = document.createElement("option");
    optionEnd.value = key;
    optionEnd.textContent = value.name;
    endDropdown.appendChild(optionEnd);
  });
}

function implement_a_star(startKey, endKey) {
  const start_x = startKey % cols;
  const start_y = Math.floor(startKey / cols);
  const end_x = endKey % cols;
  const end_y = Math.floor(endKey / cols);

  // Temporarily set start and end points to 2
  const originalStart = office[start_y][start_x];
  const originalEnd = office[end_y][end_x];
  office[start_y][start_x] = 2;
  office[end_y][end_x] = 2;

  const openSet = [];
  const closedSet = new Set();
  const gScore = Array.from({ length: rows }, () => Array(cols).fill(Infinity));
  const fScore = Array.from({ length: rows }, () => Array(cols).fill(Infinity));
  const cameFrom = Array.from({ length: rows }, () => Array(cols).fill(null));

  gScore[start_y][start_x] = 0;
  fScore[start_y][start_x] = heuristic(start_x, start_y, end_x, end_y);
  openSet.push({ x: start_x, y: start_y, f: fScore[start_y][start_x] });

  while (openSet.length > 0) {
    openSet.sort((a, b) => a.f - b.f);
    const current = openSet.shift();
    const { x, y } = current;

    if (x === end_x && y === end_y) {
      // Revert start and end points to their original values
      office[start_y][start_x] = originalStart;
      office[end_y][end_x] = originalEnd;
      return reconstructPath(cameFrom, end_x, end_y);
    }

    closedSet.add(`${x},${y}`);

    for (const [dx, dy] of [
      [0, 1],
      [1, 0],
      [0, -1],
      [-1, 0],
    ]) {
      const neighborX = x + dx;
      const neighborY = y + dy;

      if (
        neighborX < 0 ||
        neighborX >= cols ||
        neighborY < 0 ||
        neighborY >= rows ||
        closedSet.has(`${neighborX},${neighborY}`) ||
        office[neighborY][neighborX] !== 2
      ) {
        continue;
      }

      const tentativeGScore = gScore[y][x] + 1;

      if (tentativeGScore < gScore[neighborY][neighborX]) {
        cameFrom[neighborY][neighborX] = { x, y };
        gScore[neighborY][neighborX] = tentativeGScore;
        fScore[neighborY][neighborX] =
          tentativeGScore + heuristic(neighborX, neighborY, end_x, end_y);

        if (
          !openSet.some((node) => node.x === neighborX && node.y === neighborY)
        ) {
          openSet.push({
            x: neighborX,
            y: neighborY,
            f: fScore[neighborY][neighborX],
          });
        }
      }
    }
  }

  // Revert start and end points to their original values
  office[start_y][start_x] = originalStart;
  office[end_y][end_x] = originalEnd;

  return []; // No path found
}

function heuristic(x1, y1, x2, y2) {
  return Math.abs(x1 - x2) + Math.abs(y1 - y2); // Manhattan distance
}

function reconstructPath(cameFrom, end_x, end_y) {
  const path = [];
  let current = { x: end_x, y: end_y };

  while (current) {
    path.push(current.y * cols + current.x);
    current = cameFrom[current.y][current.x];
  }

  return path.reverse();
}

function ZoomIn() {
  var container = document.querySelector(".container");
  let originalScrollLeft = container.scrollLeft;
  let originalScrollTop = container.scrollTop;
  multiplier += 0.2;
  multiplier = Math.min(multiplier, 3); // Limit maximum zoom level
  canvas.width = original_width * multiplier;
  canvas.height = original_height * multiplier;
  ctx.scale(multiplier, multiplier);
  FindPath();
  container.scrollLeft = originalScrollLeft * multiplier;
  container.scrollTop = originalScrollTop * multiplier;
}

function ZoomOut() {
  var container = document.querySelector(".container");
  let originalScrollLeft = container.scrollLeft;
  let originalScrollTop = container.scrollTop;
  multiplier -= 0.2;
  multiplier = Math.max(multiplier, 0.1); // Limit minimum zoom level
  canvas.width = original_width * multiplier;
  canvas.height = original_height * multiplier;
  ctx.scale(multiplier, multiplier);
  FindPath();
  container.scrollLeft = originalScrollLeft * multiplier;
  container.scrollTop = originalScrollTop * multiplier;
}
